{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","numberOfPages","Math","ceil","idForNumbers","Array","fill","map","random","toString","slice","handlePageChange","page","className","cn","disabled","href","onClick","el","index","number","active","items","from","to","numbers","n","push","getNumbers","App","useState","itemNumbes","setPerPage","setCurrentPage","indexOfFirst","visibleItems","filter","_","indexOfLast","indexOf","length","id","value","onChange","event","target","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"oNAcO,IAAMA,EAAwB,SAAC,GAK/B,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAgBC,KAAKC,KAAKN,EAAQC,GAClCM,EAAe,IAAIC,MAAMJ,GAC5BK,KAAK,MACLC,KAAI,kBAZAL,KAAKM,SAASC,WAAWC,MAAM,MAchCC,EAAmB,SAACC,GACpBb,IAAgBa,GAAQA,GAAQ,GAAKA,GAAQX,GAC/CD,EAAaY,IAIjB,OACE,qBAAIC,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAG,YAAa,CAAEC,SAA0B,IAAhBhB,IAA3C,SACE,mBACE,UAAQ,WACRc,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBjB,GAAqB,OACpCkB,QAAS,kBAAMN,EAAiBZ,EAAc,IALhD,oBAWDK,EAAaG,KAAI,SAACW,EAAIC,GACrB,IAAMC,EAASD,EAAQ,EAEvB,OACE,oBAEEN,UAAWC,IAAG,YACZ,CAAEO,OAAQD,IAAWrB,IAHzB,SAKE,mBACE,UAAQ,WACRc,UAAU,YACVG,KAAI,WAAMI,GACVH,QAAS,kBAAMN,EAAiBS,IAJlC,SAMGA,KAVEF,MAgBX,oBAAIL,UAAWC,IAAG,YAChB,CAAEC,SAAUhB,IAAgBE,IAD9B,SAGE,mBACE,UAAQ,WACRY,UAAU,YACVG,KAAK,QACL,gBAAejB,IAAgBE,GAAiB,OAChDgB,QAAS,kBAAMN,EAAiBZ,EAAc,IALhD,wBC/DFuB,ECNC,SAAoBC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,EDDKG,CAAW,EAAG,IACzBrB,KAAI,SAAAmB,GAAC,qBAAYA,MAEPG,EAAgB,WAC3B,MAAqBC,mBAAmBR,GAAjCS,EAAP,oBACA,EAA8BD,mBAAS,GAAvC,mBAAOhC,EAAP,KAAgBkC,EAAhB,KACA,EAAsCF,mBAAS,GAA/C,mBAAO/B,EAAP,KAAoBkC,EAApB,KAWMC,EAAepC,GAAWC,EAAc,GAExCoC,EAAeJ,EAAWK,QAAO,SAACC,EAAGlB,GACzC,OAAOA,GAASe,GAAgBf,EAAQe,EAAepC,KAGnDwC,EAAcP,EAAWQ,QAAQJ,EAAaA,EAAaK,OAAS,IAE1E,OACE,sBAAK3B,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWd,EADX,mBACiCmC,EAAe,EADhD,cACuDI,EAAc,EADrE,eAC6EP,EAAWS,OADxF,OAIA,sBAAK3B,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACR4B,GAAG,kBACH5B,UAAU,eACV6B,MAAO5C,EACP6C,SA5BgB,SAACC,GACzBZ,GAAYY,EAAMC,OAAOH,OACzBT,EAAe,IAqBT,UAOE,wBAAQS,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkBjC,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEhB,MAAOkC,EAAWS,OAClB1C,QAASA,EACTC,YAAaA,EACbC,aAlDgB,SAACY,GACrBqB,EAAerB,MAoDb,6BACGuB,EAAa5B,KAAI,SAAAwC,GAAI,OAAI,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,YEjE3CC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.d3a0555e.chunk.js","sourcesContent":["import { FC } from 'react';\nimport cn from 'classnames';\n\ninterface Props {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void\n}\n\nfunction getRandomDigits() {\n  return Math.random().toString().slice(2);\n}\n\nexport const Pagination: FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const numberOfPages = Math.ceil(total / perPage);\n  const idForNumbers = new Array(numberOfPages)\n    .fill(null)\n    .map(() => getRandomDigits());\n\n  const handlePageChange = (page: number) => {\n    if (currentPage !== page && page >= 1 && page <= numberOfPages) {\n      onPageChange(page);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={cn('page-item', { disabled: currentPage === 1 })}>\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1 && 'true'}\n          onClick={() => handlePageChange(currentPage - 1)}\n        >\n          «\n        </a>\n      </li>\n\n      {idForNumbers.map((el, index) => {\n        const number = index + 1;\n\n        return (\n          <li\n            key={el}\n            className={cn('page-item',\n              { active: number === currentPage })}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${number}`}\n              onClick={() => handlePageChange(number)}\n            >\n              {number}\n            </a>\n          </li>\n        );\n      })}\n\n      <li className={cn('page-item',\n        { disabled: currentPage === numberOfPages })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === numberOfPages && 'true'}\n          onClick={() => handlePageChange(currentPage + 1)}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [itemNumbes] = useState<string[]>(items);\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const onPageChange = ((page: number) => {\n    setCurrentPage(page);\n  });\n\n  const changeItemPerPage = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(+event.target.value);\n    setCurrentPage(1);\n  };\n\n  const indexOfFirst = perPage * (currentPage - 1);\n\n  const visibleItems = itemNumbes.filter((_, index) => {\n    return index >= indexOfFirst && index < indexOfFirst + perPage;\n  });\n\n  const indexOfLast = itemNumbes.indexOf(visibleItems[visibleItems.length - 1]);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${indexOfFirst + 1} - ${indexOfLast + 1} of ${itemNumbes.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={changeItemPerPage}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={itemNumbes.length}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={onPageChange}\n      />\n\n      <ul>\n        {visibleItems.map(item => <li key={item} data-cy=\"item\">{item}</li>)}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}